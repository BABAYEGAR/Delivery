@using Delivery.Data.Service.Enums
@model IEnumerable<Delivery.Data.Objects.Entities.Flavour>

@{
    Layout = "../Shared/_LayoutTables.cshtml";
    ViewBag.Title = "Index";
    ViewBag.Header = "Flavour";
    ViewBag.Subtitle = "List of shisha flavours";
    ViewBag.add = StockAction.Add.ToString();
    ViewBag.remove = StockAction.Remove.ToString();
}
@if (TempData["flavour"] != null)
{
    if (TempData["notificationtype"].Equals(NotificationType.Success.ToString()))
    {
        <div class="alert alert-success alert-dismissable">@TempData["flavour"]</div>
    }
    else if (TempData["notificationtype"].Equals(NotificationType.Danger.ToString()))
    {
        <div class="alert alert-danger alert-dismissable">@TempData["flavour"]</div>
    }
    else if (TempData["notificationtype"].Equals(NotificationType.Info.ToString()))
    {
        <div class="alert alert-info alert-dismissable">@TempData["flavour"]</div>
    }
}
<table class="table table-condensed" id="dataTables-example">
    <thead>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AvailableQuantity)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SafetyStock)
        </th>
        <th>
            @Html.DisplayName("Purchase Flag")
        </th>
        <th>Actions</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AvailableQuantity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SafetyStock)
            </td>
            <td>
                @if (item.AvailableQuantity - item.SafetyStock == item.SafetyStock)
                {
                    <i class="fa fa-flag-o"></i>
                }
            </td>
            <td>
                <a class="btn btn-xs btn-primary" href="@Url.Action("StockManager", new RouteValueDictionary(
                                                            new {id = item.FlavourId, ViewBag.add}))">
                    Add Stock
                </a>|
                @Html.ActionLink("Remove Stock", "StockManager", new {id = item.FlavourId, ViewBag.remove}, new {@class = "btn btn-xs btn-danger"}) |
                @Html.ActionLink("Edit", "Edit", new {id = item.FlavourId}, new {@class = "btn btn-xs btn-primary"}) |
                @Html.ActionLink("Delete", "Delete", new {id = item.FlavourId}, new {@class = "btn btn-xs btn-danger"})
            </td>
        </tr>
    }
    </tbody>
</table>