@model Delivery.Data.Objects.Entities.Flavour
@{
    Layout = "../Shared/_LayoutForms.cshtml";
    ViewBag.Title = "Edit";
    ViewBag.Header = "Shisha Flavour";
    ViewBag.Subtitle = "Modify shisha flavour";
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Flavour</h4>
        <hr/>
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        @Html.HiddenFor(model => model.FlavourId)
        @Html.HiddenFor(model => model.AvailableQuantity)

        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.Name, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.SafetyStock, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.SafetyStock, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.SafetyStock, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.UnitAmount, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.UnitAmount, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.SafetyStock, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-10 col-md-12">
                <input type="submit" value="Save" class="btn btn-primary"/>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}