@using Delivery.Data.Service.Enums
@model Delivery.Data.Objects.Entities.AppUser
@{
    Layout = "../Shared/_LayoutForms.cshtml";
    ViewBag.Title = "Create";
    ViewBag.Header = "Application User";
    ViewBag.Subtitle = "Add a new application user";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.Firstname, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Firstname, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Firstname, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.Middlename, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Middlename, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Middlename, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.Lastname, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Lastname, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Lastname, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.Email, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Email, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.Mobile, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Mobile, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Mobile, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.Role, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownList("Role", EnumHelper.GetSelectList(typeof(UserType)), "select a user role", new {@class = "form-control select-dropdown"})
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-10 col-md-12">
                <input type="submit" value="Create User" class="btn btn-primary"/>
            </div>
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}