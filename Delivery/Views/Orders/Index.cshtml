@using Delivery.Data.Objects.Entities
@using Delivery.Data.Service.Enums
@model IEnumerable<Delivery.Data.Objects.Entities.Order>

@{
    Layout = "../Shared/_LayoutTables.cshtml";
    ViewBag.Title = "Index";
    ViewBag.Header = "Order";
    ViewBag.Subtitle = "List of placed orders";
}
@{
    var loggedinuser = Session["shishaloggedinuser"] as AppUser;
}
@if (TempData["order"] != null)
{
    if (TempData["notificationtype"].Equals(NotificationType.Success.ToString()))
    {
        <div class="alert alert-success alert-dismissable">@TempData["order"]</div>
    }
    else if (TempData["notificationtype"].Equals(NotificationType.Danger.ToString()))
    {
        <div class="alert alert-danger alert-dismissable">@TempData["order"]</div>
    }
    else if (TempData["notificationtype"].Equals(NotificationType.Info.ToString()))
    {
        <div class="alert alert-info alert-dismissable">@TempData["order"]</div>
    }
}
@if (loggedinuser != null)
{
    <table class="table table-condensed" id="dataTables-example">
        <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Flavour.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Shisha.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OrderCode)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OrderStatus)
            </th>
            <th>Actions</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Flavour.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Shisha.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OrderCode)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Quantity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OrderStatus)
                </td>
                <td>
                    @if ((loggedinuser.Role == UserType.DeliveryMan.ToString()) && (item.OrderStatus == OrderStatus.New.ToString()))
                    {
                        @Html.ActionLink("Activate Delivery", "ChangeStatusToProgress", new {id = item.OrderId}, new {@class = "btn btn-xs btn-primary"})
                    }
                    @if ((loggedinuser.Role == UserType.DeliveryMan.ToString()) && (item.OrderStatus == OrderStatus.InProgress.ToString()))
                    {
                        @Html.ActionLink("Mark as Delivered", "ChangeStatusToDelivered", new {id = item.OrderId}, new {@class = "btn btn-xs btn-primary"})
                    }
                    @if ((loggedinuser.Role == UserType.User.ToString()) && (item.OrderStatus == OrderStatus.InProgress.ToString()))
                    {
                        @Html.ActionLink("Cancel Order", "ChangeStatusToCancelled", new {id = item.OrderId}, new {@class = "btn btn-xs btn-danger"})
                    }
                    @Html.ActionLink("Details", "Details", new {id = item.OrderId}, new {@class = "btn btn-xs btn-warning"})
                    @if (loggedinuser.Role == UserType.DeliveryMan.ToString())
                    {
                        @Html.ActionLink("Delete", "Delete", new {id = item.OrderId}, new {@class = "btn btn-xs btn-danger"})
                    }
                </td>
            </tr>
        }
        </tbody>
    </table>
}